#!/bin/sh /etc/rc.common
# Copyright (C) 2020 IrineSistiana

START=99
USE_PROCD=1
PROG=/usr/bin/dnsproxy
CONFIGURATION=DNSProxy
PORT1="-l 127.0.0.1 -p 5335"
PORT2="-l 127.0.0.1 -p 6050"

CONF_OVERSEA="$(uci get DNSProxy.DNSProxy.node5335)"
CONF_MAINLAND="$(uci get DNSProxy.DNSProxy.node6050)"

service_triggers()
{
    procd_add_reload_trigger "CONFIGURATION"
}

reload_service()
{
	stop
	sleep 2s
	echo "dnsproxy is restarted!"
	start
}

restart_others()
{
  /etc/init.d/network reload
  /etc/init.d/dnsmasq restart
  /etc/init.d/shadowsocksr restart
}

restore_setting()
{
  sed -i "/list server/d" /etc/config/network
  sed -i "/dhcp_option/d" /etc/config/dhcp
  uci commit dhcp
  uci set shadowsocksr.@global[0].pdnsd_enable='1'
  uci set shadowsocksr.@global[0].tunnel_forward='8.8.4.4:53'
  uci commit shadowsocksr
  uci del network.lan.dns
  uci del network.wan.peerdns
  uci del network.wan.dns
  uci commit network
}

prepare_setting()
{
  sed -i "/list server/d" /etc/config/network
  uci add_list dhcp.@dnsmasq[0].server='127.0.0.1#6050'
  uci set dhcp.@dnsmasq[0].rebind_protection='0'
  lanip="$(uci get network.lan.ipaddr)"
  sed -i "/dhcp_option/d" /etc/config/dhcp
  sed -i "/dhcpv6/a\\\tlist dhcp_option '6,$lanip'" /etc/config/dhcp
  uci commit dhcp
  uci set shadowsocksr.@global[0].dports='1'
  uci set shadowsocksr.@global[0].pdnsd_enable='0'
  uci del shadowsocksr.@global[0].tunnel_forward
  uci commit shadowsocksr
  sed -i "/list dns/d" /etc/config/network
  uci set network.wan.peerdns='0'
  uci add_list network.wan.dns='127.0.0.1'
  uci add_list network.lan.dns='127.0.0.1'
  uci commit network
}



run_node1()
{
    procd_open_instance OVERSEA
		procd_set_param command $PROG $PORT1 $CONF_OVERSEA
		procd_set_param file /etc/config/DNSProxy
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_close_instance OVERSEA
    echo "dnsproxy OVERSEA is started!"
}

run_node2()
{
    procd_open_instance MAINLAND
		procd_set_param command $PROG $PORT2 $CONF_MAINLAND
		procd_set_param file /etc/config/DNSProxy
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_close_instance MAINLAND
    echo "dnsproxy MAINLAND is started!"
}

start_service()
{
   # Reading config
   config_load "${CONFIGURATION}"
   local enabled

  config_get_bool enabled DNSProxy enabled 0

  if [ "$enabled" -eq 0 ]; then
  restore_setting
  restart_others
	echo "dnsproxy has turned off"
	return 1
  fi
  	prepare_setting

		run_node1
		run_node2

		restart_others

		echo "dnsproxy turn on"
		echo "enabled="$enabled""
}

stop_service()
{
		config_load "${CONFIGURATION}"
		local enabled

		config_get_bool enabled DNSProxy enabled 0
		killall -q dnsproxy
		echo "dnsproxy turn off"
		echo "enabled="$enabled""
}
