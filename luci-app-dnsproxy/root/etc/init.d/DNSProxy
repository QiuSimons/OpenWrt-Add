#!/bin/sh /etc/rc.common
# Copyright (C) 2020 IrineSistiana

START=99
STOP=10
USE_PROCD=1
PROG=/usr/bin/dnsproxy
CONFIGURATION=DNSProxy
PORT1="-l 127.0.0.1 -p 5335"
PORT2="-l 127.0.0.1 -p 6050"
ipv6flag="--ipv6-disabled"

uci_get_by_type()
{
    local "ret"
    ret="$(uci get "$NAME".@"$1"[0]."$2" 2>/dev/null)"
    echo "${ret:=$3}"
}

CONF_OVERSEA="$(uci_get_by_type "$NAME" "node5335" "tls://8.8.4.4:853 tls://1.1.1.1:853")"
CONF_MAINLAND="$(uci_get_by_type "$NAME" "node6050" "119.29.29.29 223.5.5.5 180.76.76.76")"

CONF_NOIPV6="$(uci_get_by_type "$NAME" "noipv6" "1")"
if [ "${CONF_NOIPV6}" = "0" ];  then
    ipv6flag=""
fi

service_triggers()
{
    procd_add_reload_trigger "CONFIGURATION"
}

reload_service()
{
    stop
    sleep 2s
    echo "dnsproxy is restarted!"
    start
}

restart_others()
{
    /etc/init.d/network reload
    /etc/init.d/dnsmasq restart
    /etc/init.d/shadowsocksr restart
}

restore_setting()
{
    sed -i "/list server/d" /etc/config/network
    sed -i "/dhcp_option/d" /etc/config/dhcp
    uci commit dhcp
    uci set shadowsocksr.@global[0].pdnsd_enable='1'
    uci set shadowsocksr.@global[0].tunnel_forward='8.8.4.4:53'
    uci commit shadowsocksr
    uci del network.lan.dns
    uci del network.wan.peerdns
    uci del network.wan.dns
    uci commit network
}

prepare_setting()
{
    sed -i "/list server/d" /etc/config/network
    uci add_list dhcp.@dnsmasq[0].server='127.0.0.1#6050'
    uci set dhcp.@dnsmasq[0].rebind_protection='0'
    lanip="$(uci get network.lan.ipaddr)"
    sed -i "/dhcp_option/d" /etc/config/dhcp
    sed -i "/dhcpv6/a\\\tlist dhcp_option '6,$lanip'" /etc/config/dhcp
    uci commit dhcp
    uci set shadowsocksr.@global[0].dports='1'
    uci set shadowsocksr.@global[0].pdnsd_enable='0'
    uci del shadowsocksr.@global[0].tunnel_forward
    uci commit shadowsocksr
    sed -i "/list dns/d" /etc/config/network
    uci set network.wan.peerdns='0'
    uci add_list network.wan.dns='127.0.0.1'
    uci add_list network.lan.dns='127.0.0.1'
    uci commit network
}


run_node1()
{
    procd_open_instance OVERSEA
    procd_set_param command $PROG $PORT1 "-u '/var/run/dnsproxy/dnsproxy_oversea.conf' --all-servers --cache --cache-min-ttl=3600 --fastest-addr" $ipv6flag
    procd_set_param file /etc/config/DNSProxy
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_close_instance OVERSEA
    echo "dnsproxy OVERSEA is started!"
}

run_node2()
{
    procd_open_instance MAINLAND
    procd_set_param command $PROG $PORT2 "-u '/var/run/dnsproxy/dnsproxy_mainland.conf' --all-servers --cache --cache-min-ttl=3600 --fastest-addr"
    procd_set_param file /etc/config/DNSProxy
    procd_set_param stdout 1
    procd_set_param stderr 1
    procd_close_instance MAINLAND
    echo "dnsproxy MAINLAND is started!"
}

start_service()
{
    # Reading config
    config_load "${CONFIGURATION}"
    local enabled

    config_get_bool enabled DNSProxy enabled 0

    if [ "$enabled" -eq 0 ]; then
        restore_setting
        restart_others
        echo "dnsproxy has turned off"
        return 1
    fi
    prepare_setting

    [ -d "/var/run/dnsproxy" ] || mkdir -p "/var/run/dnsproxy"
    echo -e "${CONF_OVERSEA// /\\n}" > "/var/run/dnsproxy/dnsproxy_oversea.conf"
    echo -e "${CONF_MAINLAND// /\\n}" > "/var/run/dnsproxy/dnsproxy_mainland.conf"

    run_node1
    run_node2

    restart_others
    echo "dnsproxy turn on"
    echo "enabled="$enabled""
}

stop_service()
{
    config_load "${CONFIGURATION}"
    local enabled

    config_get_bool enabled DNSProxy enabled 0
    killall -q dnsproxy
    rm -f /var/run/dnsproxy/*
    restore_setting
    restart_others
    echo "dnsproxy turn off"
    echo "enabled="$enabled""
}
